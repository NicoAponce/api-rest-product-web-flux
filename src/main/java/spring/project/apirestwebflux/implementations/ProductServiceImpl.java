package spring.project.apirestwebflux.implementations;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.codec.multipart.FilePart;import org.springframework.stereotype.Service;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;import spring.project.apirestwebflux.documents.Product;import spring.project.apirestwebflux.repositories.IProductRepository;import spring.project.apirestwebflux.services.IProductService;import java.io.File;import java.util.UUID;@Servicepublic class ProductServiceImpl implements IProductService {    @Autowired    private IProductRepository productRepository;    @Value("${config.uploads.path}")    private String path;    @Override    public Flux<Product> select() {        return productRepository.findAll();    }    @Override    public Mono<Product> get(String id) {        return productRepository.findById(id);    }    @Override    public Mono<Product> insert(Product product) {        return productRepository.save(product);    }    @Override    public Mono<Product> update(Product product, String id) {        return productRepository.findById(id)                .flatMap(value -> {                    value.name = product.name;                    value.price = product.price;                    value.category = product.category;                    return productRepository.save(value);                });    }    @Override    public Mono<Void> delete(String id) {        return productRepository.deleteById(id);    }    @Override    public Mono<Product> upload(String id, FilePart filePart) {        return productRepository.findById(id)                .flatMap(product -> {                    product.photo= UUID.randomUUID().toString() + "-" + filePart.filename()                            .replace(" ","")                            .replace(":","")                            .replace("\\","");                    return filePart.transferTo(new File(path + product.photo))                            .then(productRepository.save(product));                });    }}